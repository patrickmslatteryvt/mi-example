#!/bin/bash -ex
### BEGIN INIT INFO
# chkconfig: 2345 92 05
# Provides:          p4broker
# Required-Start:    $local_fs $network $p4d
# Required-Stop:     $local_fs $network $p4d
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Start/stop p4broker
# Description:       Start/stop Perforce Broker (Application level firewall)
### END INIT INFO

umask u=rwx,g=rx,o=rx   # = 0022
# The default umask 002 used for normal user. With this mask default directory permissions are 775 and default file permissions are 664.
# The default umask for the root user is 022 result into default directory permissions are 755 and default file permissions are 644.
# For directories, the base permissions are (rwxrwxrwx) 0777 and for files they are 0666 (rw-rw-rw)

# Console text colors
RED='\e[1;31m' # red console text
NC='\e[0m' # Switch console text back to regular (no color)

# Use LSB init script functions for printing messages
LSB_FUNCTIONS="/lib/lsb/init-functions"
if test -f ${LSB_FUNCTIONS} ; then
  . ${LSB_FUNCTIONS}
else
  log_success_msg()
  {
    echo -e " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo -e "${RED} ERROR! $@ ${NC}"
  }
fi

# Handle SELinux variances
if [ -x "/sbin/runuser" ]; then
  SU="/sbin/runuser -s /bin/bash"
else
  SU="/bin/su -s /bin/bash"
fi

# Read in the conf file for this daemon instance
if [ ! -f /p4/1/etc/p4d.conf ]; then
  exit 1
else
  . /p4/1/etc/p4d.conf
fi

# Name of app
APP_NAME=`basename $0`
APP_DESC="Perforce Broker"
PIDFILE=/var/run/${APP_NAME}.pid
LOCKFILE=/var/lock/subsys/${APP_NAME}
P4BROKER_DAEMON=/p4/${P4D_INSTANCE}/bin/${APP_NAME}
RETVAL=0

# Check startup binaries exist
test -x ${P4BROKER_DAEMON} || { log_failure_msg "${P4BROKER_DAEMON} not found";
if [ "$1" = "stop" ]; then exit 0;
else exit 5; fi; }
# Should also check for daemon conf file as well

case "$1" in
  # Start command
  start)
    if [ ! -f /p4/${P4D_INSTANCE}/etc/configured ]; then
      echo "This Perforce instance has not been configured yet."
      echo "The instance will not be started until it has been configured."
      exit 1
    fi
    STATUS=$( ps aux | grep "/p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        log_failure_msg "$APP_DESC is already running."
      else
        echo -n $"Starting ${APP_NAME}: "
        daemon --user=${P4D_USER} --pidfile=${PIDFILE} ${P4BROKER_DAEMON} -c /p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && touch ${LOCKFILE}
        return $RETVAL
      fi
  ;;
  # Stop command
  stop)
    STATUS=$( ps aux | grep "/p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        echo "Stopping ${APP_DESC}"
        ${SU} -m ${P4D_USER} -c "kill -s TERM p4broker-parent-pid"
        # Check to make sure we stopped it
        log_success_msg "${APP_DESC} stopped successfully"
      else
        log_failure_msg "${APP_DESC} is not running."
      fi
  ;;
  # Restart command
  restart)
    $0 stop
    sleep 5
    $0 start
  ;;
  # Status command
  status)
    if [ ! -f /p4/${P4D_INSTANCE}/etc/configured ]; then
      echo "This Perforce instance (${APP_NAME}) has not been configured yet."
      exit 1
    fi
    STATUS=$( ps aux | grep "/p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        log_success_msg "${APP_NAME} - $APP_DESC is running."
      else
        log_failure_msg "${APP_NAME} - $APP_DESC is not running."
      fi
    ;;
  # maint command - Put system in/out of maintenance mode (via broker redirection)
  maint)
    if [ ! -f /p4/${P4D_INSTANCE}/etc/maint_mode ]; then
      echo "Do you want to put the Perforce Broker into maintenance mode?"
      select yn in "Yes" "No"; do
          case $yn in
              Yes ) ln -sf /p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf.down /p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf;
                    touch /p4/${P4D_INSTANCE}/etc/maint_mode
                    break;;
              No ) exit;;
          esac
      done
    else
      echo "Do you want to take the Perforce Broker out of maintenance mode?"
      select yn in "Yes" "No"; do
          case $yn in
              Yes ) ln -sf /p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf.up /p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf;
                    rm -f /p4/${P4D_INSTANCE}/etc/maint_mode
                    break;;
              No ) exit;;
          esac
      done
    fi
  ;;
  # logtail command
  logtail)
    STATUS=$( ps aux | grep "/p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        PID=$( ps aux | grep "/p4/${P4D_INSTANCE}/etc/${APP_NAME}.conf" | grep -v grep | awk '{print $2}' )
        tail -n 40 -f /p4/${P4D_INSTANCE}/logs/${APP_NAME}.log --pid=${PID}
      else
        tail -n 40 /p4/${P4D_INSTANCE}/logs/${APP_NAME}.log
      fi
  ;;
  *)
    echo "Usage: /etc/init.d/${APP_NAME} {start|stop|restart|status|maint|logtail}"
    exit 1
  ;;
esac

exit 0
#exit $RETVAL

# ./p4d.2013.3.784164 -d -A auditlog -J journal -L log -p port -r root
# /depotdata/p4/common/bin/p4d.2013.3.784164 -d -A /p4logs/1/audit.log -J /p4logs/1/p4d.journal -L /p4logs/1/p4d.log -p 1667 -r /metadata/1
# ps aux|grep "p4"
# /depotdata/p4/common/bin/p4d.2013.3.784164 -d -A /p4logs/1/audit.log -J /p4logs/1/journal -L /p4logs/1/p4d.log -p 1667 -r /metadata/1
# ${P4LOG}
