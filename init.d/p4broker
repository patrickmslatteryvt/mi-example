#!/bin/bash
### BEGIN INIT INFO
# chkconfig: 2345 92 05
# Provides:          jira_stg
# Required-Start:    $local_fs $network 
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     false
# Short-Description: Start/stop p4broker
# Description:       Start/stop Perforce Broker
### END INIT INFO

umask u=rwx,g=rx,o=rx   # = 0022
# The default umask 002 used for normal user. With this mask default directory permissions are 775 and default file permissions are 664.
# The default umask for the root user is 022 result into default directory permissions are 755 and default file permissions are 644.
# For directories, the base permissions are (rwxrwxrwx) 0777 and for files they are 0666 (rw-rw-rw)

# Console text colors
RED='\e[1;31m' # red console text
NC='\e[0m' # Switch console text back to regular (no color)

# Use LSB init script functions for printing messages
LSB_FUNCTIONS="/lib/lsb/init-functions"
if test -f ${LSB_FUNCTIONS} ; then
  . ${LSB_FUNCTIONS}
else
  log_success_msg()
  {
    echo -e " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo -e "${RED} ERROR! $@ ${NC}"
  }
fi

# Handle SELinux variances
if [ -x "/sbin/runuser" ]; then
  SU="/sbin/runuser -s /bin/bash"
else
  SU="/bin/su -s /bin/bash"
fi

# Name of app
APP_NAME=`basename $0`
APP_DESC="Perforce Broker (${APP_NAME})"
PIDFILE=/var/run/${APP_NAME}.pid

# Read in the conf file for this daemon instance
. /p4/1/etc/p4d.conf

# Check startup binaries exist
test -x ${P4BROKER_DAEMON} || { log_failure_msg "${P4BROKER_DAEMON} not found";
if [ "$1" = "stop" ]; then exit 0;
else exit 5; fi; }
# Should also check for daemon conf file as well

case "$1" in
  # Start command
  start)
    if [ ! -f ${P4D_METADATA}/configured ]; then
      echo "This Perforce instance has not been configured yet."
      echo "The instance will not be started until it has been configured."
      exit 1
    fi
    STATUS=$( ps aux | grep "${P4LOG}" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        log_failure_msg "$APP_DESC is already running."
      else
        echo "Starting $APP_DESC"
        ${SU} -m ${P4D_USER} -c "${P4BROKER_DAEMON} -c ${P4D_ROOT}/${APP_NAME}.conf -d"
        # /depotdata/p4/common/bin/p4d.2013.3.784164 -d -A /p4logs/1/audit.log -J /p4logs/1/journal -L /p4logs/1/p4d.log -p 1667 -r /metadata/1      
      fi
  ;;
  # Stop command
  stop)
    STATUS=$( ps aux | grep "${P4LOG}" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        echo "Stopping ${APP_DESC}"
        ${SU} -m ${P4D_USER} -c "kill -s TERM p4broker-parent-pid"       
        log_success_msg "${APP_DESC} stopped successfully"
      else
        log_failure_msg "${APP_DESC} is not running."
      fi
  ;;
  # Restart command
  restart)
    $0 stop
    sleep 5
    $0 start
  ;;
  # Status command
  status)
    if [ ! -f ${METADATA}/${P4D_INSTANCE}/configured ]; then
      echo "This Perforce instance (${APP_NAME}) has not been configured yet."
      exit 1
    fi
    STATUS=$( ps aux | grep "${P4LOG}" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        log_success_msg "${APP_NAME} - ($APP_DESC) is running."
      else
        log_failure_msg "${APP_NAME} - ($APP_DESC) is not running."
      fi
    ;;
  # maint command - Put system in/out of maintenance mode (via broker redirection)
  maint)
    if [ ${MAINT_MODE} = 0 ]; then
      echo "Do you want to put the Perforce Broker into maintenance mode?"
      select yn in "Yes" "No"; do
          case $yn in
              Yes ) ln -s ${METADATA}/${P4D_INSTANCE}/p4broker.conf.down ${METADATA}/p4broker.conf;
                    MAINT_MODE=1
                    break;;
              No ) exit;;
          esac
      done
    else
      ln -s ${METADATA}/${P4D_INSTANCE}/p4broker.conf.up ${METADATA}/${P4D_INSTANCE}/p4broker.conf
      MAINT_MODE=0
    fi
  ;;
  # logtail command
  logtail)
    STATUS=$( ps aux | grep "${P4LOG}" | grep -v grep | wc -l )
      if [ ${STATUS} -gt 0 ]; then
        PID=$( ps aux | grep "${P4LOG}" | grep -v grep | awk '{print $2}' )
        tail -n 40 -f /p4logs/${P4D_INSTANCE}/p4broker.log --pid=${PID}
      else
        tail -n 40 /p4logs/${P4D_INSTANCE}/p4broker.log
      fi
  ;;
  *)
    echo "Usage: /etc/init.d/${APP_NAME} {start|restart|stop|status|logtail}"
    exit 1
  ;;
esac

exit 0

./p4d.2013.3.784164 -d -A auditlog -J journal -L log -p port -r root
/depotdata/p4/common/bin/p4d.2013.3.784164 -d -A /p4logs/1/audit.log -J /p4logs/1/p4d.journal -L /p4logs/1/p4d.log -p 1667 -r /metadata/1
ps aux|grep "p4"
/depotdata/p4/common/bin/p4d.2013.3.784164 -d -A /p4logs/1/audit.log -J /p4logs/1/journal -L /p4logs/1/p4d.log -p 1667 -r /metadata/1


${P4LOG}
