#! /bin/sh -xe
#
# p4d           Start the p4d daemon 

# Use LSB init script functions for printing messages
LSB_FUNCTIONS="/lib/lsb/init-functions"
if test -f ${LSB_FUNCTIONS} ; then
  . ${LSB_FUNCTIONS}
else
  log_success_msg()
  {
    echo -e " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo -e "${RED} ERROR! $@ ${NC}"
  }
fi

# Handle SELinux variances
if [ -x "/sbin/runuser" ]; then
  SU="/sbin/runuser -s /bin/bash"
else
  SU="/bin/su -s /bin/bash"
fi

# Read in the primary p4d conf file for this p4 instance exists
if [ ! -f /p4/1/etc/p4d.conf ]; then
  log_failure_msg "/p4/1/etc/p4d.conf not found, exiting."
  exit 1
else
  . /p4/1/etc/p4d.conf
fi

running_check() 
{
    status_p4d=`ps axu | grep 'perforce' | grep 'p4d -d'`
    if test -n "$status_p4d" ; then
        echo "OK"
        return 0
    else
        echo "FAILED"
        return 1
    fi
}

running()
{
    running_check
    if [ $? -eq "0" ]; then
        echo "OK"
        return 0
    else
        echo "FAILED"
        return 1
    fi
}

stop_running_loop() 
{
# wait for up to 1 minute
    for i in $(seq 1 60)
    do
        running_check
        if [ $? -eq "1" ]; then
            echo "OK"
            return 0
        fi
        sleep 1
    done
    
    echo "FAILED"
    return 1
}

RETVAL=0

# See how we were called.
case "$1" in
  start)
    echo -n "Starting Perforce server: "
    su - uperforce -c ". /p4/1/etc/p4d.conf; p4d -d" > /dev/null
    sleep 1
    running
    RETVAL=$?
    ;;
  stop)
    echo -n "Stopping Perforce server: "
    su - uperforce -c ". /p4/1/etc/p4d.conf; echo $COMMONSSUPERPASS | p4 -Zapp=Commons -u $COMMONSSUPER login; p4 -Zapp=Commons -u $COMMONSSUPER admin stop" >/dev/null
    stop_running_loop
    RETVAL=$?
    ;;
  status)
    running_check
    RETVAL=$?
    if [ $RETVAL -eq "0" ]; then
        echo "running"
    else
        echo "stopped"
    fi
    ;;
  restart)
    $0 stop
    $0 start
    RETVAL=$?
    ;;
  *)
    echo "Usage: p4d {start|stop|status|restart}"
    exit 1
esac

exit $RETVAL

